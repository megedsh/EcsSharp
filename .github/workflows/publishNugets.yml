name: Build, Pack & Publish to NuGet

on:
  workflow_dispatch:

env:  
    VERSION:  1.2.0  
    
jobs:
  build:
    name: Build Pack And Publish

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:Version=${{env.VERSION}}

    - name: Pack
      run: dotnet pack EcsSharp/EcsSharp.csproj  --configuration Release --no-build -o ./nupkg
      
    - name: Push package to nuget
      run: dotnet nuget push ./nupkg/*.nupkg --source https://api.nuget.org/v3/index.json  --api-key ${{ secrets.NUGET_API_KEY  }}

      
    # - name: Publish DotNet
    #   uses: SpringHgui/publish-nuget@1.0.1
    #   with:
    #     # Filepath of the project to be packaged, relative to root of repository
    #     PROJECT_FILE_PATH: EcsSharp/EcsSharp.csproj
    #     # NuGet package id, used for version detection & defaults to project name
    #     PACKAGE_NAME: EcsSharp
    #     # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
    #     #VERSION_FILE_PATH: ${{ env.VERSION }}
    #     # Regex pattern to extract version info in a capturing group
    #     #VERSION_REGEX: # optional, default is ^\s*<(Package|)Version>(.*)<\/(Package|)Version>\s*$
    #     # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
    #     VERSION_STATIC:  $(NugetVersion)
    #     # Flag to toggle git tagging, enabled by default  
    #     #TAG_COMMIT: # optional, default is true
    #     # Format of the git tag, [*] gets replaced with actual version
    #     #TAG_FORMAT: # optional, default is v*
    #     # API key to authenticate with NuGet server
    #     NUGET_KEY: ${{ secrets.NUGET_API_KEY }}
    #     # NuGet server uri hosting the packages, defaults to https://api.nuget.org
    #     NUGET_SOURCE: https://api.nuget.org
    #     # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
    #     INCLUDE_SYMBOLS: true
          
      

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4

#     - name: Setup .NET
#       uses: actions/setup-dotnet@v4
#       with:
#         dotnet-version: '8.0.x'   # Change to your target version

#     - name: Restore dependencies
#       run: dotnet restore

#     - name: Build
#       run: dotnet build --no-restore --configuration Release

#     - name: Pack NuGet package
#       run: |
#         # Use tag as the version if available, else default from csproj
#         VERSION="${GITHUB_REF#refs/tags/v}"
#         if [[ "$GITHUB_REF" == refs/tags/* ]]; then
#           dotnet pack --configuration Release /p:PackageVersion=$VERSION --output ./nupkg
#         else
#           dotnet pack --configuration Release --output ./nupkg
#         fi

#     - name: Publish to NuGet
#       if: startsWith(github.ref, 'refs/tags/')
#       run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
